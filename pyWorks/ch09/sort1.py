# 정렬방법 - 1. 내장함수, 2. 반복 조건문
# 리스트의 메서드 - sort(), reverse()
# 1. 내장함수
a = [60, 5, 33, 12, 97, 24]
a.reverse() # 거꾸로 배치
# print(a)

a.sort()    # 오름차순
# print(a)

a.sort(reverse=True)    # 내림차순
# print(a)

# 2. 반복 조건문(중첩 for)
# 오름차순 정렬 알고리즘 - 버블정렬
n = len(a)
temp = 0
for i in range(n):
    for j in range(n - 1):
        if a[j] > a[j+1]:
            # 교환(자리바꾸기)
            '''
            temp = a[j]
            a[j] = a[j+1]
            a[j+1] = temp
            '''
            a[j], a[j+1] = a[j+1], a[j]
'''
    i = 0, j = 0 a[0] > a[1] 60, 5 True 5, 60, 33, 12, 97, 24
           j = 1 a[1] > a[2] 60, 33 True  5, 33, 60, 12, 97, 24
           j = 2 a[2] > a[3] 60, 12 True 5, 33, 12, 60, 97, 24
           j = 3 a[3] > a[4] 60, 97 False 5, 33, 12, 60, 97, 24
           j = 4 a[4] > a[5] 97, 24 True 5, 33, 12, 60, 24, 97
    i = 1, j = 0 a[0] > a[1] 5, 33 False 5, 33, 12, 60, 24, 97
           j = 1 a[1] > a[2] 33, 12 True 5, 12, 33, 60, 24, 97
           j = 2 a[2] > a[3] 33, 60 False 5, 12, 33, 60, 24, 97
           j = 3 a[3] > a[4] 60, 24 True 5, 12, 33, 24, 60, 97
           j = 4 a[4] > a[5] 60, 97 False 5, 12, 33, 24, 60, 97
    i = 2, j = 0 a[0] > a[1] 5, 12 False 5, 12, 33, 24, 60, 97
           j = 1 a[1] > a[2] 12, 33 False 5, 12, 33, 24, 60, 97
           j = 2 a[2] > a[3] 33, 24 True 5, 12, 24, 33, 60, 97
'''
print(a)